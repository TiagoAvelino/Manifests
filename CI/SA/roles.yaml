apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline
  namespace: openshift-pipelines
secrets:
  - name: my-quay-secret
  - name: git-credentials
imagePullSecrets:
  - name: my-quay-secret
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pipelines-as-code-cleanup-job
  namespace: openshift-pipelines
rules:
  - apiGroups: ["tekton.dev"]
    resources: ["taskruns"]
    verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipelines-as-code-cleanup-job
  namespace: openshift-pipelines
subjects:
  - kind: ServiceAccount
    name: pipeline
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pipelines-as-code-cleanup-job
---
# -------------------------------------------------------------------
# Grant the 'pipeline' SA permission to use your custom Buildah SCC
# -------------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pipeline-buildah-scc
rules:
  - apiGroups: ["security.openshift.io"]
    resources: ["securitycontextconstraints"]
    # must match the name of your custom SCC (see previous step)
    resourceNames: ["buildah-scc-userid-1001"]
    verbs: ["use"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipeline-buildah-scc-binding
subjects:
  - kind: ServiceAccount
    name: pipeline
    namespace: openshift-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipeline-buildah-scc
---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: buildah-scc-userid-1001
allowPrivilegeEscalation: true
allowPrivilegedContainer: false
requiredDropCapabilities:
  - ALL
allowedCapabilities:
  - SETFCAP
runAsUser:
  type: MustRunAs
  uid: 1001
seLinuxContext:
  type: MustRunAs
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - secret
  - projected
